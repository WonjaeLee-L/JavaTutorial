1. 컨셉을 정의

	자동차를 등록, 조회, 전체보기, 삭제 기능를 가짐.
	<등록 정보> 입차시간, 출차시간, 차번호, 차종, 요금 이며 차종(1-대형,2-중형,3-소형)에 따라서 요금(10000, 5000, 1000)으로함
	<조회> 사용자에 따라 고객, 관리자로 구분하여 고객은 본인 차량만, 관리자는 전체조회
	<수정> 관리자만 수정 (요금)
	<삭제> 고객만 출차 처리로 삭제하고 출차 array에 자동 등록됨. 관리자는 출차 리스트 보기만 함
	
	관리자 메뉴 추가 <요금관리> 주차된 차량의 종류별 요금 합계
	사용자 구분은 Main 에서 메뉴로 1.고객 2.관리자 로 선택함
	
	
	 <기술회의>
	프로젝트명 : CarParking
	네이밍규칙 : car+기능명
	소통방식은 : 카톡
	소스공유   : git 

2. 클래스를 구분
	클래스를 구분                               의존
	CarParkingMain		(메인 실행 메뉴, 고객 관리자 사용 선택, 초기 데이터 읽기)
	CarParkingCustomMge	(고객 - 차량정보 처리기능)
	CarParkingMge		(관리자 - 차량 전체조회, 요금관리, 출차현황 기능)
	CarParkingOne		(주차차량 기본정보 선언, 정보 입/출기능, 1대차량 출력기능)
	CarParkingFileRead	(기초 data파일 읽어서 array초기값 저장) 

3. 클래스의 의존관계 변수 선언 및 주소 할당 방법 선택
	// 객체 생성
	CarParkingMge carPM = new CarParkingMge();
	CarParkingCustomMge carCusPM = new CarParkingCustomMge();
	CarParkingFileRead carDataRead = new CarParkingFileRead();
	
	// 고객 클래스에서 차량 정보, 출차 정보를 가지고 옴. (할당)
	carPM.carList = carCusPM.carList;
	carPM.outList = carCusPM.outList;
	carDataRead.carList = carCusPM.carList;
	
4. 클래스의 메서드만 정의 (매개변수와 리턴값을 고려)
	[CarParkingMge]

5. 세부적인 코딩
	CarParkingMain.java
	CarParkingCustomMge.java
	CarParkingOne.java
	CarParkingMge.java
	CarParkingFileRead.java
	->소스 참조

6. 테스트
	[고객]  입차, 주차조회, 출차 각 기능을 테스트 함.
	[관리자] 전체조회, 요금수정, 출자조회  각 기능을 테스트 함.

	<테스트 결과>
	- 차량번호 공백문자 제거 필요
	- 숫자 선택 입력에서 문자 입력시 에러 수정 필요 (해결)
	- 주차 차량이 없는 경우 [고객] 출차기능에서 메시지 출력 필요  

7. 리뷰를 통해 리팩토링
	입차시간과 출차시간에 따른 (요금)정보를 정의 : 기본 30분(차종별 금액), 10분당 500원 추가
	고객 [조회] 현재까지 주차된 시간 경과에 따라서 금액 안내.
	    [출차] 경과시간에 따른 금액 저장후, 출차정보로 이동

8. 테스트

9. 종료